Requirements

The requirements therfore on this project are to produce an ant colony simulation which exploits the benifits parallel of the functional programming language Haskell. The behaviour of the project's resulting artifact aims to portray an functioning ant colony. Ants should seek out food using exploratory strategies, communicate locations of food to other ants in the colony using pheremones and return to the colony's nest. The ant colonies increasing size should be reflected in the size of the nest, and the nests size in turn will dictate the amount of new ants generated by the colony. The nest's physical size will grow relative to the amount of food successfully brought back to the colony by the ants in the simulation.

Exploratory Strategies
Ants will explore the simulation world by moving randomly away from the nest, each ant will have a direction property which when.
Moving away from other ants with no food.

Communicating locations of food
Leaving a trail of pheremone.
Other ants can then pick up on this trail to more efficiently find food.


Returning to the colony
This requirement could also be achieved through the use of pheremones, or by allowing ants to retrace their steps.

Nest size


Discussion of my problem (Ant Colony) and other elements involved in creating the artifact.


[AWC 149]
